{% extends 'base.html.twig' %}

{% block title %}Team: {{ team.name }}{% endblock %}

{% block body %}
  <!-- Back Button -->
  <a href="{{ path('app_dashboard_id', { 'id': weekId }) }}" class="bg-gray-800 text-white px-4 py-2 rounded-md shadow-md mb-4 inline-block hover:bg-gray-700 transition">Back</a>

  <div class="container mx-auto px-4">
    <h1 class="text-4xl font-bold text-center mb-6">{{ team.name }}</h1>

    <div class="overflow-x-auto">
      <table class="min-w-full bg-white shadow-md rounded-lg divide-y divide-gray-200">
        <thead class="bg-gray-100">
          <tr>
            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider">Prénom</th>
            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider">Nom</th>
            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider">Note</th>
            <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider">Action</th>
            {% if is_granted('ROLE_ADMIN') %}
                <th class="px-6 py-3 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider">Points</th>
            {% endif %}
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {% for player in team.players %}
            <tr class="hover:bg-gray-50 transition">
              <td class="px-6 py-4 text-sm text-gray-900">{{ player.forename }}</td>
              <td class="px-6 py-4 text-sm text-gray-900">{{ player.name }}</td>
              <td class="px-6 py-4 text-sm text-gray-900">{{ player.rating }}</td>
              <td class="px-6 py-4 text-sm">
                <button type="button" class="add-player-btn bg-blue-500 text-white px-3 py-1 rounded-md hover:bg-blue-600 transition" data-player-id="{{ player.id }}" data-player-forename="{{ player.forename }}" data-player-name="{{ player.name }}">
  Ajouter
</button>

              </td>
              {% if is_granted('ROLE_ADMIN') %}
                <td class="px-6 py-4 text-sm">
                  <a href="{{ path('assign_points', { 'playerId': player.id, 'weekId': weekId }) }}" class="bg-yellow-500 text-white px-3 py-1 rounded-md hover:bg-yellow-600 transition">Attribuer des points</a>
                </td>
              {% endif %}
            </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>

    <div class="mt-6">
       
        <h3>DECK</h3>
        <ul id="deckPlayers">
            {% for player in selectedPlayers %}
                <li>
                    {{ player.forename }} {{ player.name }}
                </li>
            {% endfor %}
        </ul>
    
    </div>
  </div>

{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
    function confirmDelete(playerId, playerName, weekId) {
      if (confirm('Êtes-vous sûr de vouloir supprimer ' + playerName + ' du DECK ?')) {
        fetch(`/dashboard/delete-player/${weekId}/${playerId}`, {
          method: 'DELETE',
          headers: {
            'X-CSRF-TOKEN': '{{ csrf_token('delete-player') }}'
          }
        })
        .then(response => {
          if (response.ok) {
            alert(playerName + ' a été supprimé du DECK.');
            location.reload(); // Recharger la page pour refléter les modifications
          } else {
            alert('Une erreur s\'est produite lors de la suppression de ' + playerName);
          }
        })
        .catch(error => {
          alert('Erreur : ' + error.message);
        });
      }
    }

  document.addEventListener('DOMContentLoaded', function() {
   const weekId = new URLSearchParams(window.location.search).get('weekId');

   document.querySelectorAll('.add-player-btn').forEach(button => {
     button.addEventListener('click', function() {
       const playerId = this.dataset.playerId;
       const playerForename = this.dataset.playerForename;
       const playerName = this.dataset.playerName;

       fetch("{{ path('app_team_save_players') }}?weekId=" + encodeURIComponent(weekId), {
         method: "POST",
         headers: {
           "Content-Type": "application/json",
         },
         body: JSON.stringify({ players: [{ id: playerId, forename: playerForename, name: playerName }] }),
       })
       .then(response => response.json())
       .then(data => {
         if (data.status === 'success') {
           // Update the DECK UI with the new player
           const deckPlayersList = document.getElementById('deckPlayers');
           const newPlayerItem = document.createElement('li');
           newPlayerItem.textContent = `${playerForename} ${playerName}`;
           deckPlayersList.appendChild(newPlayerItem);

           alert(playerForename + ' ' + playerName + ' a été ajouté avec succès!');
         } else {
           alert('Erreur: ' + data.message);
         }
       })
       .catch(error => {
         alert('Erreur: ' + error.message);
         console.error('Erreur:', error);
       });
     });
   });
 });

  </script>
{% endblock %}
