{% extends 'base.html.twig' %}

{% block title %}Team{% endblock %}

{% block body %}
    <h1>Team</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Prénom</th>
                <th>Nom</th>
                <th>Note</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            {% for player in players %}
                <tr>
                    <td>{{ player.forename }}</td>
                    <td>{{ player.name }}</td>
                    <td>{{ player.rate }}</td>
                    <td>
                        <button class="btn btn-primary add-player-btn" data-player-id="{{ player.id }}" data-player-forename="{{ player.forename }}" data-player-name="{{ player.name }}">Ajouter</button>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <!-- Modal -->
    <div class="modal fade" id="playerModal" tabindex="-1" aria-labelledby="playerModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="playerModalLabel">Ajouter des joueurs</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="playerForm">
                        <div id="selectedPlayers"></div>
                        <button type="button" class="btn btn-primary" id="savePlayers">OK</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function () {
            let selectedPlayers = [];
            const playerModalElement = document.getElementById('playerModal');
            const playerModal = new bootstrap.Modal(playerModalElement);
            const selectedPlayersDiv = $('#selectedPlayers');

            $('.add-player-btn').on('click', function () {
                const playerId = $(this).data('player-id');
                const playerForename = $(this).data('player-forename');
                const playerName = $(this).data('player-name');

                if (!isPlayerSelected(playerId)) {
                    selectedPlayers.push({ id: playerId, forename: playerForename, name: playerName });
                    updateSelectedPlayers();
                    playerModal.show();
                } else {
                    alert('Le joueur est déjà sélectionné.');
                }
            });

            $('#savePlayers').on('click', function () {
                fetch("{{ path('app_player_save_ajax') }}", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ players: selectedPlayers }),
                })
                .then(response => {
                    console.log(response);
                    if (!response.ok) {
                        throw new Error('Network response was not ok ' + response.statusText);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.status === 'success') {
                        alert('Players saved successfully!');
                        selectedPlayers = [];
                        updateSelectedPlayers();
                        playerModal.hide();
                    } else {
                        alert('An error occurred: ' + data.message);
                    }
                })
                .catch(error => {
                    alert('An error occurred while saving players: ' + error.message);
               console.error('Erreur:', error);
                });
            });

            $(document).on('click', '.btn-close', function () {
                playerModal.hide();
            });

            function isPlayerSelected(playerId) {
                return selectedPlayers.some(player => player.id === playerId);
            }

            function updateSelectedPlayers() {
                selectedPlayersDiv.empty();
                selectedPlayers.forEach(player => {
                    selectedPlayersDiv.append(`<div>${player.forename} ${player.name}</div>`);
                });
            }
        });
    </script>
{% endblock %}
