{% extends 'base.html.twig' %}

{% block title %}Team: {{ team.name }}{% endblock %}

{% block body %}
    <h1>Team: {{ team.name }}</h1>

    <h2>Players in the Team</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Prénom</th>
                <th>Nom</th>
                <th>Note</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            {% for player in team.players %}
                <tr>
                    <td>{{ player.forename }}</td>
                    <td>{{ player.name }}</td>
                    <td>{{ player.rate }}</td>
                    <td>
                        <button type="button" class="btn btn-primary add-player-btn" data-player-id="{{ player.id }}" data-player-forename="{{ player.forename }}" data-player-name="{{ player.name }}">Ajouter</button>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
      <div>
        <h3>DECK</h3>
        <ul id="deckPlayers">
            {% for player in selectedPlayers %}
                <li>
                    {{ player.forename }} {{ player.name }}
                    <button class="btn btn-danger btn-sm" onclick="confirmDelete({{ player.id }}, '{{ player.forename }} {{ player.name }}')">Supprimer</button>
                </li>
            {% endfor %}
        </ul>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function () {
            const weekId = new URLSearchParams(window.location.search).get('weekId');

            $('.add-player-btn').on('click', function () {
                const playerId = $(this).data('player-id');
                const playerForename = $(this).data('player-forename');
                const playerName = $(this).data('player-name');

                fetch("{{ path('app_team_save_players') }}?weekId=" + encodeURIComponent(weekId), {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ players: [{ id: playerId, forename: playerForename, name: playerName }] }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        alert(playerForename + ' ' + playerName + ' a été ajouté avec succès!');
                        location.reload(); // Recharger la page pour mettre à jour la liste des joueurs
                    } else {
                        alert('Erreur: ' + data.message);
                    }
                })
                .catch(error => {
                    alert('Erreur: ' + error.message);
                    console.error('Erreur:', error);
                });
            });
        });
          function confirmDelete(playerId, playerName) {
            if (confirm('Êtes-vous sûr de vouloir supprimer ' + playerName + ' du DECK ?')) {
                fetch(`/dashboard/delete-player/${playerId}`, {
                    method: 'DELETE',
                    headers: {
                        'X-CSRF-TOKEN': '{{ csrf_token('delete-player') }}'
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert(playerName + ' a été supprimé du DECK.');
                        location.reload(); // Recharger la page pour refléter les modifications
                    } else {
                        alert('Une erreur s\'est produite lors de la suppression de ' + playerName);
                    }
                })
                .catch(error => {
                    alert('Erreur : ' + error.message);
                });
            }
        }
    </script>
{% endblock %}
